version: '3.8'

services:
  # Application Service
  webhook-receiver:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: webhook-receiver
    ports:
      - "8030:8030"
      - "8080:8080"
    environment:
      JAVA_OPTS: "-Xms512m -Xmx1g -XX:+UseG1GC"
    depends_on:
      - kafka
      - atlas
    networks:
      - atlan-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Zookeeper
  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
    volumes:
      - zookeeper_data:/data
      - zookeeper_log:/datalog
    networks:
      - atlan-network
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3

  # Kafka
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"   # Internal Kafka communication
      - "29092:29092" # External Kafka access
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "INTERNAL://:9092,EXTERNAL://:29092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - atlan-network
    healthcheck:
      test: kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Atlas
  atlas:
    image: sburn/apache-atlas:2.3.0
    container_name: atlas
    ports:
      - "21000:21000"
    environment:
      - ATLAS_PROVISION_EXAMPLES=false
      - ATLAS_SERVER_BIND_ADDRESS=0.0.0.0
      - ATLAS_SERVER_HOST=atlas
    volumes:
      - atlas_data:/var/lib/atlas
    networks:
      - atlan-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:21000/api/atlas/admin/version" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - atlan-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - atlan-network
    depends_on:
      - prometheus

networks:
  atlan-network:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  atlas_data:
  prometheus_data:
  grafana_data: